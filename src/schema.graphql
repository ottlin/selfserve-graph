enum EventStatus{
  LIVE
  PAST
  STAGING
  ARCHIVED
  DELETED
}

enum UserRole{
  MEETING_MANAGER
  JUNIOR_MEETING_MANAGER
  INTERNAL_ATTENDEE
  EXTERNAL_ATTENDEE
  EXECUTIVE_ADMIN
  REQUESTOR
  PARTNER
  ANYONE
}

enum EngagementTemplateType{
  GENERAL
  RECURRING
}

type EventTemplate {
  id: ID!,
  name: String!,
  meetings: String!,
  additionalInfo: [String],
  engagementTemplate: [EngagementTemplate] @relation(name: "HAS", direction: "IN")
}

type EngagementTemplate{
  id: ID!,
  name: String!,
  type: EngagementTemplateType,
  workflows: [Workflow]
}

enum FormFieldType{
  TOGGLE
  SELECT
  MULTISELECT
  INPUT
  TEXTAREA
  RADIO
  CHECKBOX
}

enum FormFieldMode{
  INLINE
  BLOCK
}

type FormField {
  id: ID!,
  type: FormFieldType!,
  mode: FormFieldMode!,
  headerText: String,
  options: [String],
  value: String,
}

type Workflow {
  id: ID!,
  menu: String!,
  submenu: String,
  helperText: String,
  enabled: Boolean!,
  formField: [FormField] @relation(name: "IS", direction: "IN")
}

type Engagement{
  id: ID!,
  name: String!,
  active: Boolean!,
  type: String!,
  createdAt: DateTime!,
  createdBy: String!,
  canBeRequestedBy: [UserRole!],
  workflow: [Workflow] @relation(name: "IS", direction: "IN"),
  location: [Location] @relation(name: "ACCESS", direction: "BOTH"),
  user: [User] @relation(name: "ACCESS", direction: "BOTH"),
  topic: [Topic] @relation(name: "ACCESS", direction: "BOTH"),
  track: [Track] @relation(name: "ACCESS", direction: "BOTH"),
  survey: [Survey] @relation(name: "ACCESS", direction: "BOTH"),
}

type EventUsersSetting {
  endorsments: Boolean!,
  doubleBooking: Boolean!,
  pushNotification: Boolean!,
  sendEmailOnMap: Boolean!
}

type Survey{
  id: ID!
  active: Boolean!,
  name: String!,
  whenToCollect: String!,
  engagement: [Engagement] @relation(name: "ACCESS", direction: "BOTH")
}

type OtherSetting{
  quickMeeting: Boolean,
  mappingModule: Boolean,
  locations: Boolean,
  interimTimeBlock: Int,
  changeMeetingType: Boolean,
  enableEmailNotification: Boolean,
  enableICSNotification: Boolean,
  enablePushNotification: Boolean
  autoRemainder: Boolean,
  whoWillgetReminders: [UserRole],
  selectMeetingTypes: [Engagement] @relation(name: "HAS", direction: "IN")
}

type Topic {
  id: ID!,
  name: String!,
  description: String,
  active: Boolean!,
  engagement: [Engagement] @relation(name: "ACCESS", direction: "BOTH")
  location: [Location] @relation(name: "ACCESS", direction: "BOTH")
  user: [User] @relation(name: "ACCESS", direction: "BOTH")
  topic: [Topic] @relation(name: "ACCESS", direction: "BOTH")
  track: [Track] @relation(name: "ACCESS", direction: "BOTH")
  survey: [Survey] @relation(name: "ACCESS", direction: "BOTH")
  # TODO: Relation to User
  # TODO: Relation to Location
  # TODO: Relation to Engagement Types 

}

type Track {
  id: ID!,
  name: String!,
  active: Boolean!,
  description: String,
  topic: [Topic] @relation(name: "ACCESS", direction: "BOTH")
  engagement: [Engagement] @relation(name: "ACCESS", direction: "BOTH")
  # TODO: Relation to Topic
  # TODO: Relation to Engagement Types 
}

type Location {
  id: ID!,
  name: String!,
  active: Boolean!,
  type: String!,
  address: String!,
  capacity: Int!,
  contactNumber: String!,
  accessibleBy: [UserRole],
  description: String
  topic: [Topic] @relation(name: "ACCESS", direction: "BOTH")
  engagement: [Engagement] @relation(name: "ACCESS", direction: "BOTH")
# TODO: Relation to Engagement Types 
# TODO: Relation to Topics 
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  active: Boolean!,
  password: String!
  emailID: String!
  eventRole: UserRole!
  jobTitle: String
  secondaryEmailID: String
  phoneNumber: String
  bio: String
  event: [Event] @relation(name: "IS", direction: "IN")
  topic: [Topic] @relation(name: "ACCESS", direction: "BOTH")
  engagement: [Engagement] @relation(name: "ACCESS", direction: "BOTH")
# TODO: Relation to Enagagement Type
# TODO: Relation to Topic
# TODO: Relation to Event 
}

type Event {
  id: ID!
  name: String!
  status: EventStatus!
  city: String!
  timezone: String!
  startDate: DateTime!
  endDate: DateTime!
  supportEmail: String!
  banner: String!
  engagement: [Engagement] @relation(name: "HAS", direction: "OUT")
  location: [Location] @relation(name: "HAS", direction: "OUT")
  user: [User] @relation(name: "HAS", direction: "OUT")
  userSettings: EventUsersSetting 
  topic: [Topic] @relation(name: "HAS", direction: "OUT")
  track: [Track] @relation(name: "HAS", direction: "OUT")
  survey: [Survey] @relation(name: "HAS", direction: "OUT")
# TODO: Relation to Roles and Privileges 
  otherSetting: OtherSetting
}

type UserWithToken {
	token: String!,
	user: User!
}

type Mutation {
	login(emailID:String!, password:String!): UserWithToken!
	register(emailID:String!, password:String!): String
	resetPassword(emailID:String!, password:String!, old: String!): String
}
